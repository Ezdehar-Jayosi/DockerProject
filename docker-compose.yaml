version: '3.8'

services:
  mongo1:
    image: mongo:4.4.25
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo1
    container_name: mongo1
    environment:
      - MONGO_INITDB_DATABASE=EDS  # Specify the initial database name
    volumes:
      - mongo1-data:/data/db
      - /init-replica-set.sh:/docker-entrypoint-initdb.d/init-replica-set.sh
    ports:
      - "27017:27017"
    networks:
      - mongoCluster

  mongo2:
    image: mongo:4.4.25
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo2
    container_name: mongo2
    volumes:
      - mongo2-data:/data/db
    ports:
      - "27018:27017"
    networks:
      - mongoCluster

  mongo3:
    image: mongo:4.4.25
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo3
    container_name: mongo3
    volumes:
      - mongo3-data:/data/db
    ports:
      - "27019:27017"
    networks:
      - mongoCluster

  polybot:
    image: polybotm
    container_name: polybot_container
    environment:
      - S3_BUCKET_URL=ezdehar-bucket
      - BUCKET_NAME=ezdehar-bucket
      - TELEGRAM_TOKEN=6433223919:AAHBxT1_vhAn4LO-s8aVDgL100wA6YeKlFo
      - TELEGRAM_APP_URL=https://e4a8-147-235-194-103.ngrok-free.app
      - REGION=eu-west-3
    ports:
      - "8443:8443"
    networks:
      - mongoCluster
    depends_on:
      - mongo1
    volumes:
      - $HOME/.aws:/root/.aws:ro # Mount AWS credentials file

  yolom:
    image: yolom
    container_name: yolom_container
    environment:
      - BUCKET_NAME=ezdehar-bucket
      - S3_BUCKET_URL=ezdehar-bucket
    ports:
      - "8081:8081"
    networks:
      - mongoCluster
    depends_on:
      - mongo1
    volumes:
      - $HOME/.aws:/root/.aws:ro # Mount AWS credentials file




networks:
  mongoCluster:
    driver: bridge

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:
