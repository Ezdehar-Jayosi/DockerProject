version: '3.8'

services:
  mongo1:
    image: mongo:4.4.25
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo1
    container_name: mongo1
    environment:
      - MONGO_INITDB_DATABASE=EDS  # Specify the initial database name
      - MONGO_INITDB_SCRIPT=/docker-entrypoint-initdb.d/init-replica-set.sh  # Specify initialization script
    volumes:
      - mongo1-data:/data/db
      - ./init-replica-set.sh:/docker-entrypoint-initdb.d/init-replica-set.sh:ro
    ports:
      - "27017:27017"
    networks:
      - mongoCluster

  mongo2:
    image: mongo:4.4.25
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo2
    container_name: mongo2
    volumes:
      - mongo2-data:/data/db
    ports:
      - "27018:27017"
    networks:
      - mongoCluster
    depends_on:
      - mongo1

  mongo3:
    image: mongo:4.4.25
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo3
    container_name: mongo3
    volumes:
      - mongo3-data:/data/db
    ports:
      - "27019:27017"
    networks:
      - mongoCluster
    depends_on:
      - mongo2


  mongo-init:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mongo-i
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  polybot:
    image: polybotm
    container_name: polybot_container
    env_file:
      - .env
    environment:
      - BUCKET_NAME=${BUCKET_NAME}
      - S3_BUCKET_URL=${BUCKET_NAME}
      - REGION=${REGION}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_APP_URL=${TELEGRAM_APP_URL}

    ports:
      - "8443:8443"
    networks:
      - mongoCluster
    depends_on:
      - yolom


  yolom:
    image: yolom
    container_name: yolom_container
    env_file:
      - .env
    environment:
      - BUCKET_NAME=${BUCKET_NAME}
      - S3_BUCKET_URL=${BUCKET_NAME}
      - REGION=${REGION}

    ports:
      - "8081:8081"
    networks:
      - mongoCluster
    depends_on:
      - mongo-init


networks:
  mongoCluster:
    driver: bridge

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:
